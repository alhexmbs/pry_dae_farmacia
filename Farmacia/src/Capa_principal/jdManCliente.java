
package Capa_principal;

import capa_negocio.Cliente;
import capa_negocio.TipoDocumento;
import javax.swing.DefaultComboBoxModel;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import java.sql.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Katia
 */
public class jdManCliente extends javax.swing.JDialog {

    TipoDocumento objTD = new TipoDocumento();
    Cliente objC = new Cliente();
    
    public jdManCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        btnGroupSexo.add(opMasculino);
        btnGroupSexo.add(opFemenino);
        opMasculino.setSelected(true);
        
        listarTipoDocumentos();
        listarClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupSexo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        txtEmailCliente = new javax.swing.JTextField();
        txtIDCliente = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        txtApPaternoCliente = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        txtNumDocCliente = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        txtNombreCliente = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        opMasculino = new javax.swing.JRadioButton();
        opFemenino = new javax.swing.JRadioButton();
        jLabel65 = new javax.swing.JLabel();
        txtApMaternoCliente = new javax.swing.JTextField();
        cboTipoDoc = new javax.swing.JComboBox<>();
        jdateFechaNacCliente = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        chkVigenciaCliente = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtFiltrarID = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnDarBaja = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(246, 244, 235));

        jPanel2.setBackground(new java.awt.Color(170, 215, 217));

        jLabel69.setBackground(new java.awt.Color(0, 0, 0));
        jLabel69.setText("Tipo Doc:");

        jLabel71.setBackground(new java.awt.Color(0, 0, 0));
        jLabel71.setText("Fecha Nac:");

        txtEmailCliente.setBackground(new java.awt.Color(239, 237, 220));
        txtEmailCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtEmailCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailClienteKeyTyped(evt);
            }
        });

        txtIDCliente.setEditable(false);
        txtIDCliente.setBackground(new java.awt.Color(239, 237, 220));
        txtIDCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel62.setBackground(new java.awt.Color(70, 130, 169));
        jLabel62.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(51, 51, 51));
        jLabel62.setText("Datos del cliente:");

        jLabel63.setBackground(new java.awt.Color(0, 0, 0));
        jLabel63.setText("Nombre:");

        jLabel64.setBackground(new java.awt.Color(0, 0, 0));
        jLabel64.setText("Ap. Paterno:");

        jLabel67.setBackground(new java.awt.Color(0, 0, 0));
        jLabel67.setText("ID cliente:");

        jLabel72.setBackground(new java.awt.Color(0, 0, 0));
        jLabel72.setText("Email:");

        txtApPaternoCliente.setBackground(new java.awt.Color(239, 237, 220));
        txtApPaternoCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtApPaternoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApPaternoClienteKeyTyped(evt);
            }
        });

        jLabel73.setBackground(new java.awt.Color(0, 0, 0));
        jLabel73.setText("N° Documento:");

        txtNumDocCliente.setBackground(new java.awt.Color(239, 237, 220));
        txtNumDocCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNumDocCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumDocClienteKeyTyped(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtNombreCliente.setBackground(new java.awt.Color(239, 237, 220));
        txtNombreCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreClienteKeyTyped(evt);
            }
        });

        jLabel74.setBackground(new java.awt.Color(0, 0, 0));
        jLabel74.setText("Sexo:");

        opMasculino.setBackground(new java.awt.Color(170, 215, 217));
        opMasculino.setText("Masculino");

        opFemenino.setBackground(new java.awt.Color(170, 215, 217));
        opFemenino.setText("Femenino");

        jLabel65.setBackground(new java.awt.Color(0, 0, 0));
        jLabel65.setText("Ap. Materno:");

        txtApMaternoCliente.setBackground(new java.awt.Color(239, 237, 220));
        txtApMaternoCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtApMaternoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApMaternoClienteKeyTyped(evt);
            }
        });

        cboTipoDoc.setBackground(new java.awt.Color(239, 237, 220));
        cboTipoDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTipoDocItemStateChanged(evt);
            }
        });

        jdateFechaNacCliente.setBackground(new java.awt.Color(239, 237, 220));
        jdateFechaNacCliente.setDateFormatString("yyyy-MM-dd");

        jLabel1.setText("Estado :");

        chkVigenciaCliente.setText("Vigente");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel62)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel64)
                            .addComponent(jLabel67)
                            .addComponent(jLabel72)
                            .addComponent(jLabel69)
                            .addComponent(jLabel71))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIDCliente)
                            .addComponent(txtApPaternoCliente)
                            .addComponent(txtEmailCliente)
                            .addComponent(cboTipoDoc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdateFechaNacCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jLabel73))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel63, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel74, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(opMasculino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(opFemenino))
                            .addComponent(txtNumDocCliente)
                            .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApMaternoCliente)
                            .addComponent(chkVigenciaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(361, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(362, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel62)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(txtIDCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(txtApPaternoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65)
                    .addComponent(txtApMaternoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel74)
                    .addComponent(opMasculino)
                    .addComponent(opFemenino))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumDocCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel73)
                    .addComponent(jLabel69)
                    .addComponent(cboTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jdateFechaNacCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel71, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(chkVigenciaCliente)))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(146, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(147, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(246, 244, 235));

        jLabel23.setText("Buscar ID:");

        txtFiltrarID.setBackground(new java.awt.Color(204, 204, 204));
        txtFiltrarID.setBorder(null);
        txtFiltrarID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltrarIDKeyTyped(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(236, 177, 89));
        btnBuscar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Lupa.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(236, 177, 89));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(236, 177, 89));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(236, 177, 89));
        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edity.png"))); // NOI18N
        btnModificar.setText("MODIFICAR");
        btnModificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnDarBaja.setBackground(new java.awt.Color(236, 177, 89));
        btnDarBaja.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDarBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnDarBaja.setText("DAR DE BAJA");
        btnDarBaja.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(txtFiltrarID, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDarBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnDarBaja, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFiltrarID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblClientes.setAutoCreateRowSorter(true);
        tblClientes.setBackground(new java.awt.Color(170, 215, 217));
        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblClientes.setShowGrid(false);
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblClientes);

        btnNuevo.setBackground(new java.awt.Color(236, 177, 89));
        btnNuevo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        btnNuevo.setText("NUEVO");
        btnNuevo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarFormulario(){
        txtIDCliente.setText("");
        txtNombreCliente.setText("");
        txtApPaternoCliente.setText("");
        txtApMaternoCliente.setText("");
        txtEmailCliente.setText("");
        btnGroupSexo.clearSelection();
        cboTipoDoc.setSelectedIndex(0);
        txtNumDocCliente.setText("");
        jdateFechaNacCliente.setDate(null);
        chkVigenciaCliente.setSelected(false);
    }
    
    private void listarTipoDocumentos(){
        ResultSet rs = null;
        DefaultComboBoxModel modeloTipoDoc = new DefaultComboBoxModel();
        cboTipoDoc.setModel(modeloTipoDoc);
        
        try{
            rs = objTD.listarTodosTipoDoc();
            while(rs.next()){
                modeloTipoDoc.addElement(rs.getString("tipo_doc"));
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error al obtener los tipos de documentos");
        }
    }
    
    private void listarClientes(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Documento");
        modelo.addColumn("Nro. Documento");
        modelo.addColumn("Nombre");
        modelo.addColumn("Ap. Paterno");
        modelo.addColumn("Ap. Materno");
        modelo.addColumn("Fecha Nacimiento");
        modelo.addColumn("Sexo");
        modelo.addColumn("Email");
        modelo.addColumn("Estado");
        
        tblClientes.setModel(modelo);
        
        ResultSet rs = null;
        String vigencia = "";
        String sexo = "";
        try{
            rs = objC.listarTodosCliente();
            while(rs.next()){
                //Depende d lo mismo GAAAAA
                if(rs.getString("estado").equals("t")){
                    vigencia = "Vigente";
                }else{
                    vigencia = "No Vigente";
                }
                
                if(rs.getString("sexo").equals("t")){
                    sexo = "Masculino";
                }else{
                    sexo = "Femenino";
                }
                
                Object[] fila = new Object[10];
                fila[0] = rs.getInt("id_cliente");
                fila[1] = rs.getString("tipo_doc");
                fila[2] = rs.getString("nro_documento");
                fila[3] = rs.getString("nombre");
                fila[4] = rs.getString("ape_paterno");
                fila[5] = rs.getString("ape_materno");
                fila[6] = rs.getDate("fecha_nacimiento");
                fila[7] = sexo;
                fila[8] = rs.getString("email");
                fila[9] = vigencia;
                
                modelo.addRow(fila);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado", "Error al obtener los clientes", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public boolean validarFecha(java.util.Date fechaNac) {
        Date fechaActual = new Date();
        if (fechaNac.after(fechaActual)) {
            return false;
        }
        return true;
    }
    
    private void insertar(){
        try{
            SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
            
            if(btnNuevo.getText().equals("NUEVO")){
                btnNuevo.setText("GUARDAR");
                limpiarFormulario();
                txtIDCliente.requestFocus();
                
                int idC = objC.genenrarIDCliente();
                txtIDCliente.setText(""+idC);
            }else{
                Date fechaSeleccionada = jdateFechaNacCliente.getDate();
                if(validarFecha(fechaSeleccionada) == false){
                    JOptionPane.showMessageDialog(this, "Por favor ingrese una fecha válida", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                }else{
                    btnNuevo.setText("NUEVO");
                    String nombreTipoDoc = cboTipoDoc.getSelectedItem().toString();

                    int idCliente = Integer.parseInt(txtIDCliente.getText());
                    String numDoc = txtNumDocCliente.getText();
                    String nombre = txtNombreCliente.getText();
                    String apPat = txtApPaternoCliente.getText();
                    String apMat = txtApMaternoCliente.getText();
                    String fechaNac = date.format(fechaSeleccionada);
                    boolean sexo = opMasculino.isSelected();
                    String email = txtEmailCliente.getText();

                    boolean estado = chkVigenciaCliente.isSelected();
                    int tipoDoc = objTD.obtenerIDTipoDoc(nombreTipoDoc);

                    //objC.insertarCliente(idCliente, numDoc, nombre, apPat, apMat, fechaNac, sexo, email, tipoDoc);
                    objC.insertarCliente(idCliente, numDoc, nombre, apPat, apMat, fechaNac, sexo, email, tipoDoc, estado);
//=======
//                    int tipoDoc = objTD.obtenerIDTipoDoc(nombreTipoDoc);
//
//                    objC.insertarCliente(idCliente, numDoc, nombre, apPat, apMat, fechaNac, sexo, email, tipoDoc);
//>>>>>>> main

                    limpiarFormulario();
                    listarClientes();
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error al intentar insertar el cliente", "Ocurrió un error inesperado", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void modificar(){
        try{
            if(txtIDCliente.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Por favor ingrese el ID del cliente", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            }else{
                SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
                int rpta = JOptionPane.showConfirmDialog(this, "¿Desea modificar la información de este cliente?", "Seleccione una opción", JOptionPane.YES_NO_OPTION);
                
                if(rpta == 0){
                    Date fechaSeleccionada = jdateFechaNacCliente.getDate();
                    if(validarFecha(fechaSeleccionada) == false){
                        JOptionPane.showMessageDialog(this, "Por favor ingrese una fecha válida", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        String nombreTipoDoc = cboTipoDoc.getSelectedItem().toString();
                    
                        int idCliente = Integer.parseInt(txtIDCliente.getText());
                        String numDoc = txtNumDocCliente.getText();
                        String nombre = txtNombreCliente.getText();
                        String apPat = txtApPaternoCliente.getText();
                        String apMat = txtApMaternoCliente.getText();
                        String fechaNac = date.format(fechaSeleccionada);
                        boolean sexo = opMasculino.isSelected();
                        String email = txtEmailCliente.getText();

                        boolean estado = chkVigenciaCliente.isSelected();
                        int tipoDoc = objTD.obtenerIDTipoDoc(nombreTipoDoc);

                        //objC.modificarCliente(idCliente, numDoc, nombre, apPat, apMat, fechaNac, sexo, email, tipoDoc);
                        objC.modificarCliente(idCliente, numDoc, nombre, apPat, apMat, fechaNac, sexo, email, tipoDoc, estado);
//=======
//                        int tipoDoc = objTD.obtenerIDTipoDoc(nombreTipoDoc);
//
//                        objC.modificarCliente(idCliente, numDoc, nombre, apPat, apMat, fechaNac, sexo, email, tipoDoc);
//>>>>>>> main

                        limpiarFormulario();
                        listarClientes();
                    }
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error al intentar modificar el cliente", "Ocurrió un error inesperado", JOptionPane.ERROR_MESSAGE);            
        }
    }
    
    private void darBaja(){
        try{
            if(txtIDCliente.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Por favor ingrese el ID del cliente", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            }else{
                int rpta = JOptionPane.showConfirmDialog(this, "¿Desea dar de baja al siguiente cliente?", "Seleccione una opción", JOptionPane.YES_NO_OPTION);
                
                if(rpta == 0){
                    int idCliente = Integer.parseInt(txtIDCliente.getText());
                    if(objC.obtenerEstado(idCliente)){
                        objC.darBajaCliente(idCliente);
                        JOptionPane.showMessageDialog(this, "El cliente fue dado de baja exitosamente", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(this, "El cliente ya se encuentra dado de baja", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    }
                    
                    limpiarFormulario();
                    listarClientes();
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error al intentar dar de baja al cliente", "Ocurrió un error inesperado", JOptionPane.ERROR_MESSAGE);            
        }
    }
    
    private void eliminar(){
        try{
            if(txtIDCliente.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Por favor ingrese el ID del cliente", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            }else{
                int rpta = JOptionPane.showConfirmDialog(this, "¿Desea eliminar permanentemente la información de este cliente?", "Seleccione una opción", JOptionPane.YES_NO_OPTION);
                
                if(rpta == 0){
                    int idCliente = Integer.parseInt(txtIDCliente.getText());
                    objC.eliminarCliente(idCliente);
                    limpiarFormulario();
                    listarClientes();
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error al intentar eliminar el cliente", "Ocurrió un error inesperado", JOptionPane.ERROR_MESSAGE);            
        }
    }
    
    private void buscarCliente(){
        ResultSet rs = null;
        
        try{
            if(txtFiltrarID.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Por favor ingrese el ID del cliente", "Alerta", JOptionPane.INFORMATION_MESSAGE);
            }else{
                int idClienteFiltro = Integer.parseInt(txtFiltrarID.getText());
                rs = objC.listarPorIDCliente(idClienteFiltro);
                
                if(rs.next()){
                    txtFiltrarID.setText(rs.getString("id_cliente"));
                    txtIDCliente.setText(rs.getString("id_cliente"));
                    txtNombreCliente.setText(rs.getString("nombre"));
                    txtApPaternoCliente.setText(rs.getString("ape_paterno"));
                    txtApMaternoCliente.setText(rs.getString("ape_materno"));
                    txtEmailCliente.setText(rs.getString("email"));
                    boolean sexo = rs.getBoolean("sexo");
                    if(sexo == true){
                        opMasculino.setSelected(true);
                    }else{
                        opFemenino.setSelected(true);
                    }
                    cboTipoDoc.setSelectedIndex(rs.getInt("id_tipo_doc")-1);
                    txtNumDocCliente.setText(rs.getString("nro_documento"));
                    jdateFechaNacCliente.setDate(rs.getDate("fecha_nacimiento"));

                    chkVigenciaCliente.setSelected(rs.getBoolean("estado"));

                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Error al buscar el cliente", "Ocurrió un error inesperado", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        buscarCliente();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarFormulario();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificar();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaActionPerformed
        darBaja();
    }//GEN-LAST:event_btnDarBajaActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        insertar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtNombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreClienteKeyTyped
        // TODO add your handling code here:
        int x = evt.getKeyChar();
        boolean validacion = x >= 65 && x <= 90 || x >= 97 && x <= 122;
        if(!validacion){
            evt.consume();
        }
        
        if(txtNombreCliente.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreClienteKeyTyped

    private void txtApPaternoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApPaternoClienteKeyTyped
        // TODO add your handling code here:
        int x = evt.getKeyChar();
        boolean validacion = x >= 65 && x <= 90 || x >= 97 && x <= 122;
        if(!validacion){
            evt.consume();
        }
        
        if(txtApPaternoCliente.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_txtApPaternoClienteKeyTyped

    private void txtApMaternoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApMaternoClienteKeyTyped
        // TODO add your handling code here:
        int x = evt.getKeyChar();
        boolean validacion = x >= 65 && x <= 90 || x >= 97 && x <= 122;
        if(!validacion){
            evt.consume();
        }
        
        if(txtApMaternoCliente.getText().length() >= 100){
            evt.consume();
        }
    }//GEN-LAST:event_txtApMaternoClienteKeyTyped

    private void txtEmailClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailClienteKeyTyped
        // TODO add your handling code here:
        if(txtEmailCliente.getText().length() >= 200){
            evt.consume();
        }
    }//GEN-LAST:event_txtEmailClienteKeyTyped

    private int definirLimite(){
        String tipoDoc = cboTipoDoc.getSelectedItem().toString();
        int limite = 0;
        
        switch (tipoDoc) {
            case "DNI":
                limite = 8;
                break;
            case "RUC":
                limite = 11;
                break;
            case "Pasaporte":
                limite = 15;
                break;
        }
        
        return limite;
    }
    
    private void txtNumDocClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumDocClienteKeyTyped
        // TODO add your handling code here:
        int limite = definirLimite();
        
        int x = evt.getKeyChar();
        boolean validacion = x >= 48 && x <= 57;
        if(!validacion){
            evt.consume();
        }
        
        if(txtNumDocCliente.getText().length() >= limite){
            evt.consume();
        }
    }//GEN-LAST:event_txtNumDocClienteKeyTyped

    private void txtFiltrarIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltrarIDKeyTyped
        // TODO add your handling code here:
        int x = evt.getKeyChar();
        boolean validacion = x >= 48 && x <= 57;
        if(!validacion){
            evt.consume();
        }
        
        if(txtFiltrarID.getText().length() >= 5){
            evt.consume();
        }
    }//GEN-LAST:event_txtFiltrarIDKeyTyped

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        // TODO add your handling code here:
        txtIDCliente.setText(String.valueOf(tblClientes.getValueAt(tblClientes.getSelectedRow(), 0)));
        txtFiltrarID.setText(String.valueOf(tblClientes.getValueAt(tblClientes.getSelectedRow(), 0)));
        btnBuscarActionPerformed(null);
    }//GEN-LAST:event_tblClientesMouseClicked

    private void cboTipoDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTipoDocItemStateChanged
        // TODO add your handling code here:
        txtNumDocCliente.setText("");
    }//GEN-LAST:event_cboTipoDocItemStateChanged



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDarBaja;
    private javax.swing.JButton btnEliminar;
    private javax.swing.ButtonGroup btnGroupSexo;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cboTipoDoc;
    private javax.swing.JCheckBox chkVigenciaCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private com.toedter.calendar.JDateChooser jdateFechaNacCliente;
    private javax.swing.JRadioButton opFemenino;
    private javax.swing.JRadioButton opMasculino;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtApMaternoCliente;
    private javax.swing.JTextField txtApPaternoCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtFiltrarID;
    private javax.swing.JTextField txtIDCliente;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtNumDocCliente;
    // End of variables declaration//GEN-END:variables
}
