
package Capa_principal;

import capa_negocio.Fabricante;
import capa_negocio.Forma_farmaceutica;
import capa_negocio.Producto;
import javax.swing.DefaultComboBoxModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Katia
 */
public class jdDetalleProductoTipo extends javax.swing.JDialog {

    Forma_farmaceutica objff = new Forma_farmaceutica();
    Producto objp = new Producto();
    Fabricante objf = new Fabricante();

    /**
     * Creates new form jdDetalleProductoTipo
     */
    public jdDetalleProductoTipo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listarformaFarmaceutica();
        listarProductos();
        listarFabricante();
                                    listarDetalleEnTabla("");

    }
    
    private void limpiarFormulario() {
    cboff.setSelectedIndex(0);
    cboProductos.setSelectedIndex(0);
    cboFabricante.setSelectedIndex(0);
    spStock.setValue(0);
    txtPrecioVenta.setText("");
    cboEstado.setSelectedIndex(0);
    txtPrincipio.setText("");
    spDosis.setValue(0);
    cboUnidad.setSelectedIndex(0);
}


    private void listarformaFarmaceutica() {
        ResultSet rsForma = null;
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        cboff.setModel(modelo);

        try {
            rsForma = objff.listarFormaFarmaceutica("General");
            while (rsForma.next()) {
                modelo.addElement(rsForma.getString("forma_farmaceutica"));
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al listar formas farmaceuticas");
        }

    }

    private void listarProductos() {
        ResultSet rsForma = null;
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        cboProductos.setModel(modelo);

        try {
            rsForma = objp.listarProductos("General");
            while (rsForma.next()) {
                modelo.addElement(rsForma.getString("nombre"));
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al listar Productos");
        }

    }

    private void listarFabricante() {
        ResultSet rsForma = null;
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        cboFabricante.setModel(modelo);

        try {
            rsForma = objf.listarFabricantes("General");
            while (rsForma.next()) {
                modelo.addElement(rsForma.getString("nombre_fabricante"));
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al listar Fabricantes");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel24 = new javax.swing.JLabel();
        cboFiltros = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaGuardarda1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        spStock = new javax.swing.JSpinner();
        jLabel65 = new javax.swing.JLabel();
        txtPrecioVenta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboEstado = new javax.swing.JComboBox<>();
        jLabel80 = new javax.swing.JLabel();
        cboFabricante = new javax.swing.JComboBox<>();
        jLabel71 = new javax.swing.JLabel();
        txtPrincipio = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        btnBuscarProducto = new javax.swing.JButton();
        cboff = new javax.swing.JComboBox<>();
        spDosis = new javax.swing.JSpinner();
        cboUnidad = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        cboProductos = new javax.swing.JComboBox<>();
        jLabel76 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnSave1 = new javax.swing.JButton();
        btnEdit1 = new javax.swing.JButton();
        btnLimpiar1 = new javax.swing.JButton();
        btnDarBaja2 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        cboFiltros1 = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();

        jLabel24.setText("Filtrar por");

        cboFiltros.setBackground(new java.awt.Color(246, 244, 235));
        cboFiltros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "Nombre ascendente", "Nombre descente" }));
        cboFiltros.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cboFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFiltrosActionPerformed(evt);
            }
        });

        TablaGuardarda1.setAutoCreateRowSorter(true);
        TablaGuardarda1.setBackground(new java.awt.Color(170, 215, 217));
        TablaGuardarda1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaGuardarda1.setShowGrid(false);
        TablaGuardarda1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaGuardarda1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TablaGuardarda1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(246, 244, 235));

        jPanel8.setBackground(new java.awt.Color(170, 215, 217));

        jLabel72.setBackground(new java.awt.Color(0, 0, 0));
        jLabel72.setText("Stock:");

        jLabel65.setBackground(new java.awt.Color(0, 0, 0));
        jLabel65.setText("Precio:");

        txtPrecioVenta.setBackground(new java.awt.Color(239, 237, 220));
        txtPrecioVenta.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel4.setText("Estado");

        cboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "C", "T", "I" }));

        jLabel80.setBackground(new java.awt.Color(0, 0, 0));
        jLabel80.setText("Fabricante:");

        jLabel71.setBackground(new java.awt.Color(0, 0, 0));
        jLabel71.setText("Principio activo");

        txtPrincipio.setBackground(new java.awt.Color(239, 237, 220));

        jLabel75.setBackground(new java.awt.Color(0, 0, 0));
        jLabel75.setText("Forma farmaceutica:");

        btnBuscarProducto.setBackground(new java.awt.Color(236, 177, 89));
        btnBuscarProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Lupa.png"))); // NOI18N
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        cboff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboffActionPerformed(evt);
            }
        });

        cboUnidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "mg", "g", "µg", "ml" }));

        jLabel2.setText("Dosis");

        jLabel64.setBackground(new java.awt.Color(70, 130, 169));
        jLabel64.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(51, 51, 51));
        jLabel64.setText("Detalles del producto");

        cboProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProductosActionPerformed(evt);
            }
        });

        jLabel76.setBackground(new java.awt.Color(0, 0, 0));
        jLabel76.setText("Producto");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel64)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator4))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel65)
                        .addGap(29, 29, 29)
                        .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel75)
                            .addComponent(jLabel72, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel80, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel76, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spStock, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboff, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel71, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(spDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboUnidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtPrincipio)
                            .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel64, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel75)
                                    .addComponent(cboff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel76)
                                    .addComponent(cboProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnBuscarProducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel80)
                            .addComponent(cboFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel72)
                            .addComponent(spStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65)
                            .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel71)
                            .addComponent(txtPrincipio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spDosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(0, 30, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(246, 244, 235));

        btnSave1.setBackground(new java.awt.Color(236, 177, 89));
        btnSave1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSave1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        btnSave1.setText("NUEVO");
        btnSave1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        btnEdit1.setBackground(new java.awt.Color(236, 177, 89));
        btnEdit1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEdit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edity.png"))); // NOI18N
        btnEdit1.setText("MODIFICAR");
        btnEdit1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        btnLimpiar1.setBackground(new java.awt.Color(236, 177, 89));
        btnLimpiar1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLimpiar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btnLimpiar1.setText("LIMPIAR");
        btnLimpiar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar1ActionPerformed(evt);
            }
        });

        btnDarBaja2.setBackground(new java.awt.Color(236, 177, 89));
        btnDarBaja2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDarBaja2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/darBaja.png"))); // NOI18N
        btnDarBaja2.setText("DAR DE BAJA");
        btnDarBaja2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDarBaja2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBaja2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnDarBaja2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(btnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(btnLimpiar1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(btnDarBaja2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel25.setText("Filtrar por");

        cboFiltros1.setBackground(new java.awt.Color(246, 244, 235));
        cboFiltros1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "Stock bajo", "Activos", "Inactivos" }));
        cboFiltros1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cboFiltros1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFiltros1ActionPerformed(evt);
            }
        });

        tblDetalle.setAutoCreateRowSorter(true);
        tblDetalle.setBackground(new java.awt.Color(170, 215, 217));
        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblDetalle.setShowGrid(false);
        tblDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblDetalle);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboFiltros1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 824, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cboFiltros1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void buscarDetalleProducto() {
    ResultSet rsDetalle = null;
    try {
        String formaFarmaceutica = cboff.getSelectedItem().toString();
        String producto = cboProductos.getSelectedItem().toString();
        
        if (formaFarmaceutica.isEmpty() || producto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione una forma farmacéutica y un producto para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int idFormaFarmaceutica = objff.obtenerCodigoFormaFarmaceutica(formaFarmaceutica);
        int idProducto = objp.obtenerCodigoProducto(producto);
        
        rsDetalle = objp.buscarDetalle(idFormaFarmaceutica, idProducto);

        if (rsDetalle.next()) {
            cboFabricante.setSelectedItem(rsDetalle.getString("nombre_fabricante"));
            spStock.setValue(rsDetalle.getInt("stock"));
            txtPrecioVenta.setText(String.valueOf(rsDetalle.getDouble("precio_venta")));
            cboEstado.setSelectedItem(rsDetalle.getString("estado"));
            txtPrincipio.setText(rsDetalle.getString("principio_activo"));
            
            String dosisCompleta = rsDetalle.getString("dosis");
            if (dosisCompleta != null && !dosisCompleta.isEmpty()) {
                String[] partesDosis = dosisCompleta.split(" - ");
                if (partesDosis.length == 2) {
                    spDosis.setValue(Integer.parseInt(partesDosis[0]));
                    cboUnidad.setSelectedItem(partesDosis[1]);
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "No se encontró ningún detalle con los IDs especificados.", "Detalle no encontrado", JOptionPane.INFORMATION_MESSAGE);
            limpiarFormulario();
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Los IDs deben ser números válidos.", "Error de formato", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al buscar el detalle del producto --> " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        try {
            if (rsDetalle != null) {
                rsDetalle.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cerrar el ResultSet --> " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}


    

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed

       buscarDetalleProducto();
    
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void cboffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboffActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        try {

            String formaFarmaceutica = cboff.getSelectedItem().toString();
            String Producto = (String) cboProductos.getSelectedItem();
            String fabricante = (String) cboFabricante.getSelectedItem();

            int idformaFarmaceutica = objff.obtenerCodigoFormaFarmaceutica(formaFarmaceutica);
            int idProducto = objp.obtenerCodigoProducto(Producto);
            int idFabricante = objf.obtenerIdFabricantePorNombre(fabricante);
            int stock = Integer.valueOf(spStock.getValue().toString());
            double precioVenta = Double.parseDouble(txtPrecioVenta.getText());
            String estadoString = (String) cboEstado.getSelectedItem(); // Convertir a String
            char estado = estadoString.charAt(0); // Tomar el primer carácter como char

            String principioActivo = txtPrincipio.getText();
            int numdosis =  Integer.parseInt(spDosis.getValue().toString());
            String unidad = cboUnidad.getSelectedItem().toString();

            String dosis = numdosis + " - " + unidad;
            if (formaFarmaceutica.isEmpty() || Producto.isEmpty() || fabricante.isEmpty() || principioActivo.isEmpty()
                    || stock <= 0 || numdosis <= 0 || txtPrecioVenta.getText().isEmpty() || unidad.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos obligatorios.");
            } else {

                objp.registrarDetalleProductoForma(idformaFarmaceutica, idProducto, stock, precioVenta, estado, principioActivo, dosis, idFabricante);
                limpiarFormulario();
                listarDetalleEnTabla("");
                JOptionPane.showMessageDialog(this, "detalle del producto guardado correctamente");

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al insertar Producto--> "+e.getMessage());
        }

    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
String formaFarmaceutica = cboff.getSelectedItem().toString();
    String Producto = (String) cboProductos.getSelectedItem();
    
    if (formaFarmaceutica.isEmpty() || Producto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Seleccione un producto y forma farmacéutica a buscar");
    } else {
        try {
            String fabricante = (String) cboFabricante.getSelectedItem();
            int idFormaFarmaceutica = objff.obtenerCodigoFormaFarmaceutica(formaFarmaceutica); // Corrección aquí
            int idProducto = objp.obtenerCodigoProducto(Producto);
            int idFabricante = objf.obtenerIdFabricantePorNombre(fabricante);
            int stock = Integer.valueOf(spStock.getValue().toString());
            double precioVenta = Double.parseDouble(txtPrecioVenta.getText().trim());
            String estadoString = (String) cboEstado.getSelectedItem();
            char estado = estadoString.charAt(0);

            String principioActivo = txtPrincipio.getText().trim();
            int numdosis = (int) spDosis.getValue();
            String unidad = cboUnidad.getSelectedItem().toString();
            String dosis = numdosis + " - " + unidad;

            if (fabricante.isEmpty() || principioActivo.isEmpty() || stock < 0 || numdosis < 0 || txtPrecioVenta.getText().isEmpty() || unidad.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos obligatorios.");
            } else {
                int confirmacion = JOptionPane.showConfirmDialog(this, "¿Desea guardar los cambios en este producto?", "Confirmación", JOptionPane.YES_NO_OPTION);
                
                if (confirmacion == JOptionPane.YES_OPTION) {
                    objp.modificarDetalleProductoForma(idFormaFarmaceutica, idProducto, stock, precioVenta, estado, principioActivo, dosis, idFabricante);
                    limpiarFormulario();
                    listarDetalleEnTabla("");
                    JOptionPane.showMessageDialog(this, "Detalle del producto modificado correctamente");
                } else {
                    JOptionPane.showMessageDialog(this, "Modificación cancelada");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al modificar Producto --> " + e.getMessage());
        }
    }

    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void btnLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimpiar1ActionPerformed

    private void btnDarBaja2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBaja2ActionPerformed
        ResultSet listadt = null;
        String formaFarmaceutica = cboff.getSelectedItem().toString();
        String Producto = (String) cboProductos.getSelectedItem();
        if (formaFarmaceutica.isEmpty() || Producto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione un producto y forma farmaceutica para dar de baja");
        } else {

            try {
                int idFormaFarmaceutica = objff.obtenerCodigoFormaFarmaceutica(formaFarmaceutica);
                int idProducto = objp.obtenerCodigoProducto(Producto);

                listadt = objp.buscarDetalle(idFormaFarmaceutica,idProducto);

                while (listadt.next()) {
                    if (listadt.getString("estado").equals("I")) {
                        JOptionPane.showMessageDialog(this, "Este detalle del producto ya ha sido dado de baja anteriomente");
                    } else {

                        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Desea dar de baja este detalle del producto?");
                        if (confirmacion == JOptionPane.YES_OPTION) {
                            objp.darDeBajaDetalleProducto(idProducto, idFormaFarmaceutica);
                            limpiarFormulario();
                            listarDetalleEnTabla("");
                            JOptionPane.showMessageDialog(rootPane, "rubro dado de baja correctamente");
                        }

                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());

            }

        }
    }//GEN-LAST:event_btnDarBaja2ActionPerformed

    private void cboProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboProductosActionPerformed

    private void cboFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFiltrosActionPerformed
        String filtro = cboFiltros.getSelectedItem().toString();
       // listar(filtro);
    }//GEN-LAST:event_cboFiltrosActionPerformed

    private void TablaGuardarda1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaGuardarda1MouseClicked
       // txtId2.setText(String.valueOf(TablaGuardarda1.getValueAt(TablaGuardarda1.getSelectedRow(), 0)));
        //btnBuscar1ActionPerformed(null);
    }//GEN-LAST:event_TablaGuardarda1MouseClicked

    private void cboFiltros1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFiltros1ActionPerformed
aplicarFiltro();
    }//GEN-LAST:event_cboFiltros1ActionPerformed

    private void aplicarFiltro() {
    String filtroSeleccionado = (String) cboFiltros.getSelectedItem();
    String filtro = "";

    switch (filtroSeleccionado) {
        case "General":
            filtro = ""; 
            break;
        case "Stock bajo":
            filtro = "dtf.stock <= 10";
            break;
        case "Activos":
            filtro = "dtf.estado = 'A'";
            break;
        case "Inactivos":
            filtro = "dtf.estado = 'I'";
            break;
        default:
            JOptionPane.showMessageDialog(this, "Filtro no reconocido.");
            return;
    }

    try {
        ResultSet rsDetalle = objp.listardetalle(filtro);

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Forma Farmacéutica");
        modelo.addColumn("Producto");
        modelo.addColumn("Fabricante");
        modelo.addColumn("Stock");
        modelo.addColumn("Precio");
        modelo.addColumn("Estado");
        modelo.addColumn("Principio Activo");
        modelo.addColumn("Dosis");

        while (rsDetalle.next()) {
            Object[] fila = new Object[8];
            fila[0] = rsDetalle.getString("forma_farmaceutica");
            fila[1] = rsDetalle.getString("nombre");
            fila[2] = rsDetalle.getString("nombre_fabricante");
            fila[3] = rsDetalle.getInt("stock");
            fila[4] = rsDetalle.getDouble("precio_venta");
            fila[5] = rsDetalle.getString("estado");
            fila[6] = rsDetalle.getString("principio_activo");
            fila[7] = rsDetalle.getString("dosis");
            modelo.addRow(fila);
        }

        tblDetalle.setModel(modelo);

       
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al aplicar filtro --> " + e.getMessage());
    }
}

     private void listarDetalleEnTabla(String filtro) {
    // Definir el modelo de la tabla
    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("Forma Farmacéutica");
    modelo.addColumn("Producto");
    modelo.addColumn("Fabricante");
    modelo.addColumn("Stock");
    modelo.addColumn("Precio");
    modelo.addColumn("Estado");
    modelo.addColumn("Principio Activo");
    modelo.addColumn("Dosis");

    try {
        // Obtener el ResultSet con los datos filtrados
        ResultSet rsDetalle = objp.listardetalle(filtro);

        // Iterar sobre el ResultSet y añadir filas al modelo de la tabla
        while (rsDetalle.next()) {
            // Extraer datos de cada columna
            String formaFarmaceutica = rsDetalle.getString("forma_farmaceutica");
            String producto = rsDetalle.getString("nombre");
            String fabricante = rsDetalle.getString("nombre_fabricante");
            int stock = rsDetalle.getInt("stock");
            double precio = rsDetalle.getDouble("precio_venta");
            String estado = rsDetalle.getString("estado");
            String principioActivo = rsDetalle.getString("principio_activo");
            String dosis = rsDetalle.getString("dosis");

            // Crear una fila y agregarla al modelo
            Object[] fila = { formaFarmaceutica, producto, fabricante, stock, precio, estado, principioActivo, dosis };
            modelo.addRow(fila);
        }

        // Asignar el modelo a la tabla
        tblDetalle.setModel(modelo);

        // Cerrar el ResultSet
        rsDetalle.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al listar los detalles en la tabla --> " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

 

    private void tblDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleMouseClicked
        cboff.setSelectedItem(String.valueOf(tblDetalle.getValueAt(tblDetalle.getSelectedRow(), 0)));
        cboProductos.setSelectedItem(String.valueOf(tblDetalle.getValueAt(tblDetalle.getSelectedRow(), 1)));

        btnBuscarProductoActionPerformed(null);
    }//GEN-LAST:event_tblDetalleMouseClicked

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaGuardarda1;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnDarBaja2;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton btnLimpiar1;
    private javax.swing.JButton btnSave1;
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JComboBox<String> cboFabricante;
    private javax.swing.JComboBox<String> cboFiltros;
    private javax.swing.JComboBox<String> cboFiltros1;
    private javax.swing.JComboBox<String> cboProductos;
    private javax.swing.JComboBox<String> cboUnidad;
    private javax.swing.JComboBox<String> cboff;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSpinner spDosis;
    private javax.swing.JSpinner spStock;
    private javax.swing.JTable tblDetalle;
    private javax.swing.JTextField txtPrecioVenta;
    private javax.swing.JTextField txtPrincipio;
    // End of variables declaration//GEN-END:variables
}
